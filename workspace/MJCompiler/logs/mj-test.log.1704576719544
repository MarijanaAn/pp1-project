INFO  22:31:15,842 - Compiling source file: C:\projekatpp1\workspace\MJCompiler\test\program.mj
INFO  22:31:16,416 - #2 program
INFO  22:31:16,417 - #49 p
INFO  22:31:16,417 - #49 Table
INFO  22:31:16,422 - #49 val
INFO  22:31:16,424 - #6 ;
INFO  22:31:16,433 - #10 const
INFO  22:31:16,439 - #49 int
INFO  22:31:16,439 - #49 i
INFO  22:31:16,439 - #17 ::
ERROR 22:31:16,447 - 
Sintaksna greska na liniji 13
INFO  22:31:16,447 - #24 =
INFO  22:31:16,447 - #48 10
INFO  22:31:16,447 - #7 ,
INFO  22:31:16,449 - #49 b
INFO  22:31:16,450 - #24 =
INFO  22:31:16,450 - #48 30
INFO  22:31:16,450 - #6 ;
INFO  22:31:16,450 - #10 const
INFO  22:31:16,450 - #49 bool
INFO  22:31:16,450 - #49 a
ERROR 22:31:16,451 - Izvrsen oporavak od greske u konstrukciji iskaza dodele u liniji 8
INFO  22:31:16,499 - #24 =
INFO  22:31:16,499 - #47 true
INFO  22:31:16,513 - #6 ;
INFO  22:31:16,526 - #49 int
INFO  22:31:16,527 - #49 rows
INFO  22:31:16,529 - #7 ,
INFO  22:31:16,529 - #49 columns
INFO  22:31:16,529 - #6 ;
INFO  22:31:16,530 - #3 {
INFO  22:31:16,530 - #43 void
INFO  22:31:16,532 - #49 f
INFO  22:31:16,532 - #14 (
INFO  22:31:16,532 - #49 char
INFO  22:31:16,532 - #17 ::
INFO  22:31:16,542 - #49 k
INFO  22:31:16,542 - #49 ch
INFO  22:31:16,542 - #7 ,
INFO  22:31:16,548 - #49 int
INFO  22:31:16,548 - #49 a
INFO  22:31:16,548 - #7 ,
INFO  22:31:16,549 - #49 int
INFO  22:31:16,550 - #49 arg
INFO  22:31:16,552 - #15 )
INFO  22:31:16,553 - #49 int
INFO  22:31:16,562 - #49 x
INFO  22:31:16,562 - #6 ;
INFO  22:31:16,562 - #3 {
INFO  22:31:16,562 - #40 break
INFO  22:31:16,568 - #6 ;
INFO  22:31:16,568 - #39 continue
INFO  22:31:16,571 - #6 ;
INFO  22:31:16,571 - #38 return
INFO  22:31:16,574 - #6 ;
INFO  22:31:16,575 - #4 }
INFO  22:31:16,578 - #43 void
INFO  22:31:16,580 - #49 f
INFO  22:31:16,580 - #14 (
INFO  22:31:16,580 - #49 char
INFO  22:31:16,580 - #49 ch
INFO  22:31:16,581 - #7 ,
INFO  22:31:16,581 - #49 int
INFO  22:31:16,581 - #49 a
INFO  22:31:16,582 - #7 ,
INFO  22:31:16,582 - #49 int
INFO  22:31:16,582 - #49 arg
INFO  22:31:16,582 - #15 )
INFO  22:31:16,582 - #49 int
INFO  22:31:16,584 - #49 x
INFO  22:31:16,584 - #6 ;
INFO  22:31:16,588 - #3 {
INFO  22:31:16,588 - #49 x
INFO  22:31:16,588 - #24 =
INFO  22:31:16,623 - #49 uffj
INFO  22:31:16,631 - #49 arg
ERROR 22:31:16,631 - 
Sintaksna greska na liniji 31
INFO  22:31:16,631 - #6 ;
INFO  22:31:16,631 - #49 y
INFO  22:31:16,632 - #24 =
INFO  22:31:16,632 - #48 2
ERROR 22:31:16,632 - Izvrsen oporavak od greske u konstrukciji iskaza dodele u liniji 4
INFO  22:31:16,634 - #6 ;
INFO  22:31:16,641 - #4 }
INFO  22:31:16,642 - #43 void
INFO  22:31:16,642 - #49 main
INFO  22:31:16,642 - #14 (
INFO  22:31:16,642 - #15 )
INFO  22:31:16,646 - #49 int
INFO  22:31:16,647 - #49 x
INFO  22:31:16,647 - #7 ,
INFO  22:31:16,647 - #49 i
INFO  22:31:16,647 - #6 ;
INFO  22:31:16,647 - #49 char
INFO  22:31:16,648 - #49 c
INFO  22:31:16,648 - #6 ;
INFO  22:31:16,648 - #49 int
INFO  22:31:16,648 - #49 arr
INFO  22:31:16,648 - #8 [
INFO  22:31:16,648 - #9 ]
INFO  22:31:16,648 - #6 ;
INFO  22:31:16,648 - #3 {
INFO  22:31:16,648 - #49 val
INFO  22:31:16,648 - #24 =
INFO  22:31:16,649 - #18 new
INFO  22:31:16,649 - #49 Table
INFO  22:31:16,649 - #14 (
INFO  22:31:16,649 - #15 )
INFO  22:31:16,652 - #6 ;
INFO  22:31:16,653 - #49 val
INFO  22:31:16,654 - #16 .
INFO  22:31:16,654 - #49 setfactor
INFO  22:31:16,662 - #14 (
INFO  22:31:16,663 - #48 2
INFO  22:31:16,666 - #15 )
INFO  22:31:16,668 - #6 ;
INFO  22:31:16,668 - #49 arr
INFO  22:31:16,668 - #24 =
INFO  22:31:16,669 - #18 new
INFO  22:31:16,669 - #49 int
INFO  22:31:16,669 - #8 [
INFO  22:31:16,669 - #48 3
INFO  22:31:16,669 - #9 ]
INFO  22:31:16,669 - #6 ;
INFO  22:31:16,670 - #36 for
INFO  22:31:16,670 - #14 (
INFO  22:31:16,670 - #49 i
INFO  22:31:16,670 - #24 =
INFO  22:31:16,670 - #48 0
INFO  22:31:16,670 - #6 ;
INFO  22:31:16,671 - #49 i
INFO  22:31:16,671 - #29 <
INFO  22:31:16,673 - #48 3
INFO  22:31:16,680 - #6 ;
INFO  22:31:16,681 - #49 i
INFO  22:31:16,682 - #21 ++
INFO  22:31:18,511 - #15 )
INFO  22:31:18,512 - #3 {
INFO  22:31:18,517 - #49 arr
INFO  22:31:18,517 - #8 [
INFO  22:31:18,517 - #49 i
INFO  22:31:18,517 - #9 ]
INFO  22:31:18,518 - #24 =
INFO  22:31:18,519 - #49 i
INFO  22:31:18,519 - #6 ;
INFO  22:31:18,519 - #4 }
INFO  22:31:18,519 - #4 }
INFO  22:31:18,521 - #4 }
INFO  22:31:18,602 - Program(
 p
  NoNamespace(
  ) [NoNamespace]
  DeclVar(
    DeclConst(
      ErrorConst(
      ) [ErrorConst]
      ConstDeclarations(
        Types(
         bool
        ) [Types]
       a
        Bool(
        ) [Bool]
        NoConstDecl(
        ) [NoConstDecl]
      ) [ConstDeclarations]
    ) [DeclConst]
    VarDeclaration(
      Types(
       int
      ) [Types]
     rows
      NoBrackets(
      ) [NoBrackets]
      VarDeclars(
        NoVarDecls(
        ) [NoVarDecls]
       columns
        NoBrackets(
        ) [NoBrackets]
      ) [VarDeclars]
    ) [VarDeclaration]
  ) [DeclVar]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        NoMethodDeclaration(
        ) [NoMethodDeclaration]
        VoidMethod(
         f
          FormParam(
            MultFormPars(
              MultFormPars(
                SingleFormPars(
                  FormalParamDecl(
                    NamespaceType(
                     char
                     k
                    ) [NamespaceType]
                   ch
                    NoBrackets(
                    ) [NoBrackets]
                  ) [FormalParamDecl]
                ) [SingleFormPars]
                FormalParamDecl(
                  Types(
                   int
                  ) [Types]
                 a
                  NoBrackets(
                  ) [NoBrackets]
                ) [FormalParamDecl]
              ) [MultFormPars]
              FormalParamDecl(
                Types(
                 int
                ) [Types]
               arg
                NoBrackets(
                ) [NoBrackets]
              ) [FormalParamDecl]
            ) [MultFormPars]
          ) [FormParam]
          VarDelcarations(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Types(
               int
              ) [Types]
             x
              NoBrackets(
              ) [NoBrackets]
              NoVarDecls(
              ) [NoVarDecls]
            ) [VarDeclaration]
          ) [VarDelcarations]
          Stms(
            Stms(
              Stms(
                NoStms(
                ) [NoStms]
                Break(
                ) [Break]
              ) [Stms]
              Continue(
              ) [Continue]
            ) [Stms]
            ReturnNoExpr(
            ) [ReturnNoExpr]
          ) [Stms]
        ) [VoidMethod]
      ) [MethodDeclarations]
      VoidMethod(
       f
        FormParam(
          MultFormPars(
            MultFormPars(
              SingleFormPars(
                FormalParamDecl(
                  Types(
                   char
                  ) [Types]
                 ch
                  NoBrackets(
                  ) [NoBrackets]
                ) [FormalParamDecl]
              ) [SingleFormPars]
              FormalParamDecl(
                Types(
                 int
                ) [Types]
               a
                NoBrackets(
                ) [NoBrackets]
              ) [FormalParamDecl]
            ) [MultFormPars]
            FormalParamDecl(
              Types(
               int
              ) [Types]
             arg
              NoBrackets(
              ) [NoBrackets]
            ) [FormalParamDecl]
          ) [MultFormPars]
        ) [FormParam]
        VarDelcarations(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Types(
             int
            ) [Types]
           x
            NoBrackets(
            ) [NoBrackets]
            NoVarDecls(
            ) [NoVarDecls]
          ) [VarDeclaration]
        ) [VarDelcarations]
        Stms(
          Stms(
            NoStms(
            ) [NoStms]
            DStm(
              ErrorDesStmt(
              ) [ErrorDesStmt]
            ) [DStm]
          ) [Stms]
          DStm(
            AssignExpr(
              Desgn(
               y
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [Desgn]
              Assign(
              ) [Assign]
              TermExpr(
                FactorTerm(
                  NumConst(
                   2
                  ) [NumConst]
                ) [FactorTerm]
              ) [TermExpr]
            ) [AssignExpr]
          ) [DStm]
        ) [Stms]
      ) [VoidMethod]
    ) [MethodDeclarations]
    VoidMethod(
     main
      NoFormParams(
      ) [NoFormParams]
      VarDelcarations(
        VarDelcarations(
          VarDelcarations(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Types(
               int
              ) [Types]
             x
              NoBrackets(
              ) [NoBrackets]
              VarDeclars(
                NoVarDecls(
                ) [NoVarDecls]
               i
                NoBrackets(
                ) [NoBrackets]
              ) [VarDeclars]
            ) [VarDeclaration]
          ) [VarDelcarations]
          VarDeclaration(
            Types(
             char
            ) [Types]
           c
            NoBrackets(
            ) [NoBrackets]
            NoVarDecls(
            ) [NoVarDecls]
          ) [VarDeclaration]
        ) [VarDelcarations]
        VarDeclaration(
          Types(
           int
          ) [Types]
         arr
          Brackets(
          ) [Brackets]
          NoVarDecls(
          ) [NoVarDecls]
        ) [VarDeclaration]
      ) [VarDelcarations]
      Stms(
        Stms(
          Stms(
            Stms(
              NoStms(
              ) [NoStms]
              DStm(
                AssignExpr(
                  Desgn(
                   val
                    NoIdentExpr(
                    ) [NoIdentExpr]
                  ) [Desgn]
                  Assign(
                  ) [Assign]
                  TermExpr(
                    FactorTerm(
                      NewTypeActual(
                        Types(
                         Table
                        ) [Types]
                        NoActuals(
                        ) [NoActuals]
                      ) [NewTypeActual]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [AssignExpr]
              ) [DStm]
            ) [Stms]
            DStm(
              ActualParDes(
                Desgn(
                 val
                  PeriodIdent(
                    NoIdentExpr(
                    ) [NoIdentExpr]
                   setfactor
                  ) [PeriodIdent]
                ) [Desgn]
                Actuals(
                  ActualParam(
                    TermExpr(
                      FactorTerm(
                        NumConst(
                         2
                        ) [NumConst]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [ActualParam]
                ) [Actuals]
              ) [ActualParDes]
            ) [DStm]
          ) [Stms]
          DStm(
            AssignExpr(
              Desgn(
               arr
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [Desgn]
              Assign(
              ) [Assign]
              TermExpr(
                FactorTerm(
                  NewTypeExpr(
                    Types(
                     int
                    ) [Types]
                    TermExpr(
                      FactorTerm(
                        NumConst(
                         3
                        ) [NumConst]
                      ) [FactorTerm]
                    ) [TermExpr]
                  ) [NewTypeExpr]
                ) [FactorTerm]
              ) [TermExpr]
            ) [AssignExpr]
          ) [DStm]
        ) [Stms]
        ForStmt(
          SingleDs(
            AssignExpr(
              Desgn(
               i
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [Desgn]
              Assign(
              ) [Assign]
              TermExpr(
                FactorTerm(
                  NumConst(
                   0
                  ) [NumConst]
                ) [FactorTerm]
              ) [TermExpr]
            ) [AssignExpr]
          ) [SingleDs]
          CondFacts(
            RelExpr(
              TermExpr(
                FactorTerm(
                  Var(
                    Desgn(
                     i
                      NoIdentExpr(
                      ) [NoIdentExpr]
                    ) [Desgn]
                  ) [Var]
                ) [FactorTerm]
              ) [TermExpr]
              Less(
              ) [Less]
              TermExpr(
                FactorTerm(
                  NumConst(
                   3
                  ) [NumConst]
                ) [FactorTerm]
              ) [TermExpr]
            ) [RelExpr]
          ) [CondFacts]
          SingleDs(
            Inc(
              Desgn(
               i
                NoIdentExpr(
                ) [NoIdentExpr]
              ) [Desgn]
            ) [Inc]
          ) [SingleDs]
          Stmt(
            Stms(
              NoStms(
              ) [NoStms]
              DStm(
                AssignExpr(
                  Desgn(
                   arr
                    ExFactor(
                      NoIdentExpr(
                      ) [NoIdentExpr]
                      TermExpr(
                        FactorTerm(
                          Var(
                            Desgn(
                             i
                              NoIdentExpr(
                              ) [NoIdentExpr]
                            ) [Desgn]
                          ) [Var]
                        ) [FactorTerm]
                      ) [TermExpr]
                    ) [ExFactor]
                  ) [Desgn]
                  Assign(
                  ) [Assign]
                  TermExpr(
                    FactorTerm(
                      Var(
                        Desgn(
                         i
                          NoIdentExpr(
                          ) [NoIdentExpr]
                        ) [Desgn]
                      ) [Var]
                    ) [FactorTerm]
                  ) [TermExpr]
                ) [AssignExpr]
              ) [DStm]
            ) [Stms]
          ) [Stmt]
        ) [ForStmt]
      ) [Stms]
    ) [VoidMethod]
  ) [MethodDeclarations]
) [Program]
INFO  22:31:18,604 - ===================================
INFO  22:31:18,797 -  Print count calls = 0
INFO  22:31:18,797 -  Var decl count = 0
